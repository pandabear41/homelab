
######################
# Plex               #
######################
plex:
  defaultPodOptions:
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 39  # video
        - 105  # render
  global:
    nameOverride: plex

  controllers:
    main:
      strategy: Recreate

      containers:
        main:
          image:
            repository: docker.io/plexinc/pms-docker
            tag: latest
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_ADMIN
          resources:
            requests:
              gpu.intel.com/i915: 1
            limits:
              gpu.intel.com/i915: 1
          env:
            PLEX_CLAIM: "claim-tU7s_C4GXMvcU5wzUMbx"
            HOSTNAME: "plex.pl4.me"
            TZ: "America/Phoenix"
            ALLOWED_NETWORKS: "192.168.15.1/24"

  persistence:
    transcode:
      enabled: true
      name: transcode
      type: emptyDir
      medium: Memory
      sizeLimit: 1Gi
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 50Gi
      annotations:
        'k8up.io/backup': 'true'
    media:
      enabled: true
      existingClaim: plex-nfs-media
      advancedMounts:
        main:
          main:
            - path: /media/movies
              subPath: movies
            - path: /media/shows
              subPath: shows
            - path: /media/anime
              subPath: anime

  service:
    main:
      ports:
        http:
          port: 32400
          protocol: HTTP
    external:
      type: ClusterIP
      controller: main
      primary: false
      ports:
        plex-external:
          port: 32400
          protocol: TCP
    extraports:
      type: ClusterIP
      controller: main
      primary: false
      ports:
        plex-dlna:
          port: 1900
          protocol: TCP
        plex-dlna-udp:
          port: 32469
          protocol: UDP
        plex-bonjour:
          port: 5353
          protocol: UDP
        plex-roku:
          port: 8324
          protocol: TCP
        plex-gdm-1:
          port: 32410
          protocol: UDP
        plex-gdm-2:
          port: 32412
          protocol: UDP
        plex-gdm-3:
          port: 32413
          protocol: UDP
        plex-gdm-4:
          port: 32414
          protocol: UDP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host plex.pl4.me
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http    
      tls:
        - secretName: plex-tls-certificate
          hosts:
            - *host

######################
# transmission       #
######################

transmission:
  global:
    nameOverride: transmission

  controllers:
    main:
      strategy: RollingUpdate

      pod:
        hostname: transmission
        annotations:
          setGateway: "true"
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch

      initContainers:
        01-init-themes:
          name: theme-provider
          image:
            repository: registry.gitlab.com/antoncuranz/transmission-themes
            tag: latest
          command:
            - sh
          args:
            - -c
            - |
              echo "Copying themes..."
              cp -R /opt/transmission-ui/* /themes

      containers:
        main:
          image:
            repository: docker.io/linuxserver/transmission
            tag: 4.0.5
          env:
            TZ: "America/Phoenix"
            TRANSMISSION__BLOCKLIST_URL: "https://github.com/Naunter/BT_BlockLists/raw/master/bt_blocklists.gz"
            TRANSMISSION__DOWNLOAD_DIR: "/downloads"
            TRANSMISSION__RPC_PORT: &port 9091
            TRANSMISSION__PEER_PORT: 20294
            TRANSMISSION__MESSAGE_LEVEL: 3
            TRANSMISSION_WEB_HOME: "/opt/transmission-ui/transmissionic"
          
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      annotations:
        'k8up.io/backup': 'true'
    media:
      enabled: true
      existingClaim: plex-nfs-media
      advancedMounts:
        main:
          main:
            - path: /downloads
              subPath: transmission/downloads
    themes:
      enabled: true
      type: emptyDir
      advancedMounts:
        main:
          01-init-themes:
            - path: /themes
          main:
            - path: /opt/transmission-ui

  service:
    main:
      ports:
        http:
          port: 9091
          protocol: HTTP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host transmission.pl4.me
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http    
      tls:
        - secretName: transmission-tls-certificate
          hosts:
            - *host

######################
# prowlarr           #
######################

prowlarr:
  global:
    nameOverride: prowlarr

  controllers:
    main:
      strategy: RollingUpdate

      pod:
        hostname: prowlarr
        annotations:
          setGateway: "true"
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch

      containers:
        main:
          image:
            repository: lscr.io/linuxserver/prowlarr
            tag: 1.12.2
          env:
            TZ: "America/Phoenix"
          
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      annotations:
        'k8up.io/backup': 'true'

  service:
    main:
      ports:
        http:
          port: 9696
          protocol: HTTP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host prowlarr.pl4.me
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http    
      tls:
        - secretName: prowlarr-tls-certificate
          hosts:
            - *host

######################
# radarr             #
######################

radarr:
  global:
    nameOverride: radarr

  controllers:
    main:
      strategy: RollingUpdate

      pod:
        hostname: radarr
        annotations:
          setGateway: "true"
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch

      containers:
        main:
          image:
            repository: lscr.io/linuxserver/radarr
            tag: 5.2.6
          env:
            TZ: "America/Phoenix"
          
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      annotations:
        'k8up.io/backup': 'true'
    media:
      enabled: true
      existingClaim: plex-nfs-media
      advancedMounts:
        main:
          main:
            - path: /downloads
              subPath: transmission/downloads/complete
            - path: /movies
              subPath: movies

  service:
    main:
      ports:
        http:
          port: 7878
          protocol: HTTP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host radarr.pl4.me
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http    
      tls:
        - secretName: radarr-tls-certificate
          hosts:
            - *host

######################
# sonarr             #
######################

sonarr:
  global:
    nameOverride: sonarr

  controllers:
    main:
      strategy: RollingUpdate

      pod:
        hostname: sonarr
        annotations:
          setGateway: "true"
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch

      containers:
        main:
          image:
            repository: lscr.io/linuxserver/sonarr
            tag: 4.0.1
          env:
            TZ: "America/Phoenix"
          
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      annotations:
        'k8up.io/backup': 'true'
    media:
      enabled: true
      existingClaim: plex-nfs-media
      advancedMounts:
        main:
          main:
            - path: /downloads
              subPath: transmission/downloads/complete
            - path: /movies
              subPath: movies

  service:
    main:
      ports:
        http:
          port: 8989
          protocol: HTTP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host sonarr.pl4.me
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http    
      tls:
        - secretName: sonarr-tls-certificate
          hosts:
            - *host

######################
# sonarr             #
######################

sonarr:
  global:
    nameOverride: sonarr

  controllers:
    main:
      strategy: RollingUpdate

      pod:
        hostname: sonarr
        annotations:
          setGateway: "true"
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch

      containers:
        main:
          image:
            repository: lscr.io/linuxserver/sonarr
            tag: 4.0.1
          env:
            TZ: "America/Phoenix"
          
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      annotations:
        'k8up.io/backup': 'true'
    media:
      enabled: true
      existingClaim: plex-nfs-media
      advancedMounts:
        main:
          main:
            - path: /downloads
              subPath: transmission/downloads/complete
            - path: /shows
              subPath: shows
            - path: /anime
              subPath: anime

  service:
    main:
      ports:
        http:
          port: 8989
          protocol: HTTP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host sonarr.pl4.me
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http    
      tls:
        - secretName: sonarr-tls-certificate
          hosts:
            - *host

######################
# overseerr          #
######################

overseerr:
  global:
    nameOverride: overseerr

  controllers:
    main:
      strategy: RollingUpdate

      pod:
        hostname: overseerr
        annotations:
          setGateway: "true"
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch

      containers:
        main:
          image:
            repository: lscr.io/linuxserver/overseerr
            tag: 1.33.2
          env:
            TZ: "America/Phoenix"
          
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      annotations:
        'k8up.io/backup': 'true'

  service:
    main:
      ports:
        http:
          port: 5055
          protocol: HTTP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host overseerr.pl4.me
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http    
      tls:
        - secretName: overseerr-tls-certificate
          hosts:
            - *host

######################
# tautulli           #
######################

tautulli:
  global:
    nameOverride: tautulli

  controllers:
    main:
      strategy: RollingUpdate

      pod:
        hostname: tautulli
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch

      containers:
        main:
          image:
            repository: lscr.io/linuxserver/tautulli
            tag: 2.13.4
          env:
            TZ: "America/Phoenix"
          
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Gi
      annotations:
        'k8up.io/backup': 'true'

  service:
    main:
      ports:
        http:
          port: 8181
          protocol: HTTP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host tautulli.pl4.me
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http    
      tls:
        - secretName: tautulli-tls-certificate
          hosts:
            - *host

######################
# organizr           #
######################

organizr:
  global:
    nameOverride: organizr

  controllers:
    main:
      strategy: RollingUpdate

      pod:
        hostname: organizr
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch

      containers:
        main:
          image:
            repository: docker.io/organizr/organizr
            tag: latest
          env:
            TZ: "America/Phoenix"
          
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      annotations:
        'k8up.io/backup': 'true'

  service:
    main:
      ports:
        http:
          port: 80
          protocol: HTTP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host organizr.pl4.me
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http    
      tls:
        - secretName: organizr-tls-certificate
          hosts:
            - *host
